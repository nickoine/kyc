# Generated by Django 5.1.5 on 2025-04-15 14:11

import django.contrib.postgres.indexes
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('questionnaires', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionnaireSubmission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When the questionnaire session began.', verbose_name='Started At')),
                ('submitted_at', models.DateTimeField(blank=True, db_index=True, help_text='When the questionnaire was officially submitted (must be in year/month/days).', null=True, verbose_name='Submitted At')),
                ('is_submitted', models.BooleanField(db_index=True, default=False, help_text='Whether the user has submitted the form.', verbose_name='Is Submitted')),
                ('was_assigned', models.BooleanField(default=False, help_text='True if the questionnaire was assigned by the business.', verbose_name='Was Assigned')),
                ('ip_address', models.GenericIPAddressField(help_text='IP address of the client submitting the form.', unpack_ipv4=True, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP Address')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Optional context like browser, device, geolocation, etc.', verbose_name='Metadata')),
                ('account', models.ForeignKey(help_text='The account that submitted or is completing the questionnaire.', on_delete=django.db.models.deletion.PROTECT, related_name='questionnaire_submissions', to='accounts.account', verbose_name='Account')),
                ('questionnaire', models.ForeignKey(help_text='The questionnaire being filled.', on_delete=django.db.models.deletion.PROTECT, related_name='submissions', to='questionnaires.questionnaire', verbose_name='Questionnaire')),
            ],
            options={
                'verbose_name': 'Questionnaire Submission',
                'verbose_name_plural': 'Questionnaire Submissions',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('payload', models.JSONField(help_text='The actual response content (text, choices, file reference, etc.)', verbose_name='Answer')),
                ('answered_at', models.DateTimeField(auto_now_add=True, help_text='When the answer was recorded.', verbose_name='Answered At')),
                ('question', models.ForeignKey(help_text='The question being answered.', on_delete=django.db.models.deletion.PROTECT, related_name='responses', to='questionnaires.question', verbose_name='Question')),
                ('submission', models.ForeignKey(help_text='The questionnaire submission this answer belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='responses.questionnairesubmission', verbose_name='Submission')),
            ],
            options={
                'verbose_name': 'QuestionResponse',
                'verbose_name_plural': 'QuestionResponses',
                'ordering': ['-answered_at'],
            },
        ),
        migrations.AddIndex(
            model_name='questionnairesubmission',
            index=models.Index(condition=models.Q(('is_submitted', True)), fields=['is_submitted'], name='submitted_only'),
        ),
        migrations.AddIndex(
            model_name='questionnairesubmission',
            index=models.Index(fields=['account', 'is_submitted'], name='idx_account_submitted'),
        ),
        migrations.AddIndex(
            model_name='questionnairesubmission',
            index=models.Index(fields=['submitted_at'], name='idx_submission_date'),
        ),
        migrations.AlterUniqueTogether(
            name='questionnairesubmission',
            unique_together={('account', 'questionnaire')},
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=models.Index(fields=['submission'], name='idx_by_submission'),
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=models.Index(fields=['question'], name='idx_by_question'),
        ),
        migrations.AddIndex(
            model_name='questionresponse',
            index=django.contrib.postgres.indexes.GinIndex(fields=['payload'], name='payload_gin_idx'),
        ),
    ]
